trigger CaseBadge on Case (after update) {

  for(Case cse : Trigger.new){
    if ((cse.Status == 'Closed') && (cse.KB_Article_Attached__c == true)) {
    // This Trigger only Fires if the Case is updated to 'Closed' AND the KB Article Attached custom field is “Checked”

  //Construct a message for the Thanks and Chatter Post
  String message = 'Great job not only bringing Case ' + cse.CaseNumber + ' to a close, but also for attaching the KB Article that helped close the Case.  (auto-generated by Work.com)';

  WorkThanks newWorkThanks = new WorkThanks();

      // User IDs for who the Badge/Thanks is coming from should be set to the Support Manager within this Org, which is by default – “Steven Support”
      User SupportMgr = [select id from User where alias = 'ssupp' limit 1];

      newWorkThanks.GiverId = SupportMgr.Id;
      newWorkThanks.CreatedById = SupportMgr.Id;
      newWorkThanks.Message = message;
      newWorkThanks.OwnerId = SupportMgr.Id;
      newWorkThanks.LastModifiedById = SupportMgr.Id;

  insert newWorkThanks;


  WorkBadge newWorkBadge = new WorkBadge();

      // newWorkBadge.DefinitionId should be set to the ID for the Knowledge Base Badge within this Org
      WorkBadgeDefinition KBBadgeDef = [SELECT Id,Name FROM WorkBadgeDefinition WHERE Name = '*Knowledge Base' Limit 1];

      newWorkBadge.DefinitionId = KBBadgeDef.Id;
      newWorkBadge.RecipientId = cse.OwnerId;
      newWorkBadge.SourceId = newWorkThanks.Id ;
      newWorkBadge.CreatedById = SupportMgr.Id;
      newWorkBadge.LastModifiedById = SupportMgr.Id;

  insert newWorkBadge; 

  WorkThanksShare newWorkThanksShare = new WorkThanksShare();

      newWorkThanksShare.ParentId = newWorkThanks.Id ;
      newWorkThanksShare.UserOrGroupId = cse.OwnerId;
      newWorkThanksShare.AccessLevel = 'Edit';

  insert newWorkThanksShare;

  FeedItem post = new FeedItem();

      post.ParentId = cse.OwnerId;
      post.CreatedById = SupportMgr.Id;
      post.Body = message;
      post.RelatedRecordId = newWorkThanks.Id ;
      post.Type = 'RypplePost';

  insert post;

    }

  }

}