trigger OppBadge on Opportunity (after update) {

    for(Opportunity opp : Trigger.new){
        if ((opp.stagename == 'Closed Won') && (opp.Competitor__c != null)) {
            // This Trigger only Fires if the Opportunity is updated to 'Closed Won' AND there is also a Competitor identified on the Deal
            
            //Construct a message for the Thanks and Chatter Post
            String message = 'Great Job winning the ' + opp.Name + ' deal against our competitor ' + opp.Competitor__c + '!  (auto-generated by Work.com)';
            
            WorkThanks newWorkThanks = new WorkThanks();
            
                // All User IDs should be set to the same ID, which should be Eliott Executive's ID in this Org
                User elliot = [select id from User where alias = 'eexec' limit 1];

                newWorkThanks.GiverId = elliot.Id;
                newWorkThanks.Message = message;
                newWorkThanks.OwnerId = elliot.Id;

            insert newWorkThanks;
            
            
            WorkBadge newWorkBadge = new WorkBadge();
            
                // newWorkBadge.DefinitionId should be set to the ID for the Competitor Badge within this Org
                WorkBadgeDefinition competitorBadgeDef = [SELECT Id,Name FROM WorkBadgeDefinition WHERE Name = 'Competitor' Limit 1];

                newWorkBadge.DefinitionId = competitorBadgeDef.Id;
                newWorkBadge.RecipientId = opp.OwnerId;
                newWorkBadge.SourceId = newWorkThanks.Id ;
                newWorkBadge.CreatedById = elliot.Id ;

            insert newWorkBadge; 
            
            WorkThanksShare newWorkThanksShare = new WorkThanksShare();
            
                newWorkThanksShare.ParentId = newWorkThanks.Id ;
                newWorkThanksShare.UserOrGroupId = opp.OwnerId;
            
                newWorkThanksShare.AccessLevel = 'Edit';          
                insert newWorkThanksShare;
            
            FeedItem post = new FeedItem();
            
                post.ParentId = opp.OwnerId;
                post.CreatedById = elliot.Id;
                post.Body = message;
                post.RelatedRecordId = newWorkThanks.Id ;
                post.Type = 'RypplePost';

            insert post;
        
        }
    
    }

}