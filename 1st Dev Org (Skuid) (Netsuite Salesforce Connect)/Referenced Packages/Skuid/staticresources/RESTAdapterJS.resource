/*! Skuid Banzai 7.24.0 30-10-2015 */
!function(a){var b=a.$,c=a.utils,d=c.startsWith,e=c.endsWith,f=c.contains,g=c.isString,h=c.getObjectProperty,i=c.hasObjectProperty,j=(c.mergeAsTextInContext,function(){return a.builder?a.builder.core:null}),k=c.combineUrls,l=1,m=function(a){return a&&g(a)&&"__skuid_new__"===a.substring(0,13)},n=function(){return"__skuid_new__"+l++},o=function(){return"__skuid__"+l++},p=function(a){var c="";a.fields&&a.fields.length&&b.each(a.fields,function(){return this.nameField?(c=this,!1):void 0})},q=function(a,c){var d,e=c.methods;return e&&e.length&&b.each(e,function(b,c){return c.type===a?(d=c,!1):void 0}),d},r=function(a,b){var c=q(a,b);return c?c:{type:a,verb:b.verb,endpoint:b.endpoint}},s=function(a,b){return!!q(a,b)},t=function(a){if(a)try{a=JSON.parse(a)}catch(b){}return a},u=function(c,e){e||(e={method:c.verb,dataType:c.dataType,url:c.serviceUrl,type:"query",scopes:c.scopes});{var h,i=c.getService(),j=i.serviceUrl||"",l=e.url||"",m=b.Deferred(),n=!!a.builder;e.context}return i.authenticate(c,e).done(function(){h=i.authentication;var o,p={},q=!1;!n&&c.conditions&&b.each(c.conditions,function(a,b){if(b.inactive===!1&&b.sourceParam){var d,e=c.getConditionValueResult(b),f=e.status;if(f){if("deactivate"===status)return!0;if("noquery"===status)return q=!0,m.reject("Could not perform this query because no value could be found for merge variable  '"+b.sourceParam+"'"),!1}else d=e.value,p[b.sourceParam]=d?encodeURIComponent(d):d}}),q||(o=i.createHTTPRequest(b.extend(e,{apiExtensions:p,url:k(j,l),method:e.method||"GET",contentType:e.dataType||"application/json",body:e.data})),c.query=c.debug=o.url,a.ajax[i.useApexProxy?"proxy":"direct"](o).done(function(a){var d,j,k,n=o.method,p=a.statusCode,q=a.body,r=!1;k=function(a){g(a)?d+=": "+a:a.message&&(d+=": "+a.message)},j=function(){if(d=a.status,q){if(g(q))try{q=JSON.parse(q),r=!0}catch(c){}if(r)q.error?k(q.error):q.message&&g(q.message)?d+=": "+q.message:q.errors&&q.errors instanceof Array&&q.errors.length&&k(q.errors[0]);else if(q&&f(q,"/html")){var e,h=q.indexOf("<body"),i=q.indexOf("</body>",h);e=b(h&&i?q.substring(h,i+7):q),d+=": "+b.trim(e.text()||"")}else d+=": "+q}},404===p&&(j(),d||(d='The requested resource for service "'+i.name+'" could not be found:\n\n'+l)),401===p?h&&h.success?(i.invalidateAuthentication(),u(c,e).done(function(a){m.resolve(a)}).fail(function(a){j(a),m.reject(d)})):h&&i.getPendingAuthenticationRequest()?i.getPendingAuthenticationRequest().done(function(){u(c,e).done(function(a){m.resolve(a)}).fail(function(a){m.reject(a)})}).fail(function(){j()}):j():"POST"===n?201!==p&&200!==p&&j():-1!==b.inArray(n,["PUT","PATCH","DELETE"])?204!==p&&200!==p&&j():200!==p&&j(),d?m.reject(d):m.resolve(a)}).fail(function(a){var b=a.error;if(d(b,"Invalid Request: Unauthorized endpoint")&&window.confirm("To access this Data Source, you will need to add its endpoint as a Remote Site from Salesforce Setup.\n\nWould you like to do that now?")){var c=window.location.href+"",e=encodeURIComponent(c.substring(c.indexOf("/",c.indexOf("//")+2),c.length));window.location="/0rp/e?setupid=SecurityRemoteProxy&IsActive=1&retURL="+e+"&cancelURL="+e+"&EndpointUrl="+encodeURIComponent(j)+"&SiteName="+i.name.replace(/[\W]+/g,"")+'&DescriptionField=For Skuid Model Service "'+i.name+'"'}m.reject('Request to service "'+i.name+'" failed: '+b)}))}).fail(function(a){m.reject('Unable to authenticate to service "'+i.name+'": '+a)}),m.promise()},v=function(a,b,c){return k(a,b)+"__"+c},w=function(a){var b=c.getDisplayTypeOfEntity(a);return"INTEGER"===b?"DOUBLE":b},x=function(a){return a.charAt(0).toUpperCase()+a.slice(1)},y=function(a){return b.map(a.split("."),function(a){return x(a)}).join(" ")},z=function(a,b){var c,d=w(b),e={id:a,label:y(a),isPolymorphic:!1,isNamePointing:!1,displaytype:d};if("ARRAY"===d){var f=null;b.length&&(f=w(b[0])),e.rel=a,e.ref=a,e.referenceTo=[{objectName:a,displaytype:f,label:a,relationshipName:a}]}else if("OBJECT"===d)e.rel=a,e.ref=a,e.referenceTo=[{objectName:a,label:a,relationshipName:a}];else if("DOUBLE"===d)if(c=""+b,b%1===0)e.precision=c.length,e.scale=0;else{var g=c.split(".");e.precision=g[0].length,e.scale=2===g.length?g[1].length:0}return e},A={},B=function(d,e){e||(e={});var f,g,h,i,l=b.Deferred(),m=G(d),n=d.service,o=(n?n.authentication:!1,d.scopes);if(m&&(f=m.endpoint||m.serviceUrl,g=m.verb,h=m.dataType,o=m.scopes),!f||!g||!n)return l.reject("Cannot retrieve metadata for Model without a valid Service, Service Url, and Request Method.").promise();if(m&&"query"!==m.type){if(d&&d.fields&&d.fields.length){var p={};return b.map(d.fields,function(a){var b,c=a.displaytype;b="BOOLEAN"===c?!0:"DATE"===c||"DATETIME"===c?new Date:"DOUBLE"===c||"NUMBER"===c||"PERCENT"===c?2.2:"INTEGER"===c?2:"PHONE"===c?"(800) 222-3333":"EMAIL"===c?"j@g.co":"ARRAY"===c?[]:"OBJECT"===c?{}:"a",p[a.id]=b}),l.resolve(p).promise()}return l.reject('Unable to retrieve metadata for this Model. If a query method cannot be defined for this Model (i.e. if its purpose is purely for creating/modifying/deleting records, then please click "Add Field" to manually add the fields that you would like to use.').promise()}if(i=v(n.serviceUrl,f,g),A[i])return A[i];var q,r,s=a.utils.extractFieldsFromTemplate(f,{ignoreFunctions:!0}),w={},x={},y={},z=function(a,c){var d=a.split("."),e=y;b.each(d,function(a,b){a===d.length-1?e[b]=c:(e[b]||(e[b]={}),e=e[b])})},B=function(a){var c=b.Deferred(),e=u(d,{url:a,verb:g,dataType:h,type:"query",scopes:o});return A[i]=l.promise(),b.when(e).done(function(a){c.resolve(t(a.body))}).fail(function(a){c.reject(a)}).always(function(){delete A[i]}),c.promise()},C=function(e,g){var h,i,j,k,m,n,o,p,r,s=c.generateUniqueId(),t=[],u={};b.each(e,function(a,b){var c={};c.uiOnly=!0,c.id=b.key,c.label=a,c.displaytype="TEXT",c.createable=c.editable=c.accessible=!0,t.push(c),"undefined"!=typeof b.data&&(u[c.id]=b.data)}),i=new a.model.Model({id:s,accessible:!0,createable:!0,fields:t}),i.initialize().register(),j=i.createRow(),c.size(u)&&i.updateRow(j,u),h=b.map(t,function(b){return new a.ui.Field(j,i,null,{fieldId:b.id,mode:"edit"})}),k=b('<div title="Please provide sample values for Merge Variables needed for this Model Service" class="nx-editor"/>'),m=new a.ui.Editor(k,{showSaveCancel:!1});var v=f;b.each(t,function(a,b){v=v.replace(b.label,"<b>"+b.label+"</b>")}),m.header.append(b('<div class="nx-editor-header-title">').html("<b>Model: </b>"+d.id+"<br/><b>Service URL:</b> "+v).css({color:"black","font-size":"1.2em","font-weight":"400","word-break":"break-all"})),k.append(a.ui.createFieldSet(h,{editor:m})),g&&g.error&&m.handleMessages([{severity:"ERROR",message:g.error}]),n=function(){l.reject("All parameters for Model URL not provided --- unable to retrieve metadata for Model"),k.dialog("destroy").remove(),i.unregister()},o=function(){var a={};b.each(t,function(b,c){var d=c.label,e=c.id,f=i.getFieldValue(j,e,!0);z(d,f),a[d]=f}),q.updateSettings(a),b.blockUI({message:"Retrieving metadata from REST service..."}),b.when(B(c.mergeAsText("global",f,{apiExtensions:y}))).done(function(a){l.resolve(a),b.unblockUI(),n()}).fail(function(a){b.blockUI({message:a,timeout:5e3})})},p=[{text:"Retrieve metadata",icons:{primary:"ui-icon-check"},click:o},{text:"Cancel",icons:{primary:"ui-icon-close"},click:n}],r=function(){b(this).click().find(":input").first().focus()},k.dialog({resizable:!0,modal:!0,width:"50%",open:r,close:function(){n()},buttons:p}),b.unblockUI()};return s&&s.length?(q=j().createModelSettingsService(d.id),r=q.getSettings(),b.each(s,function(a,b){var c,d="var"+a;e.ignoreCache!==!0&&(c=r[b]),x[b]={key:d,data:c},"undefined"!=typeof c?z(b,c):w[b]={key:"var"+a}}),c.size(w)?C(w):b.when(B(c.mergeAsText("global",f,{apiExtensions:y}))).done(function(a){l.resolve(a)}).fail(function(a){C(x,{error:"Unable to retrieve metadata for Model: "+a+". Please check that sample parameters for the Model URL are valid, and then re-request metadata."})})):b.when(B(f)).done(function(a){l.resolve(a)}).fail(function(a){l.reject('Error connecting to REST Data Source at URL "'+k(n.serviceUrl,f)+'": '+a)}),l.promise()},C=function(a){var b=a.crumb,c=a.service,d=a.modelXML;if(0===a.index){var e=d.attr("verb");b.rel=b.ref=c.name+(e?": "+e:"")}return b},D=function(a){var c,d=a.entity,f=a.result,g=d.path,i=[],j=[],k={fields:i,childRelationships:j,methods:d.methods,endpoint:d.serviceUrl};return g&&(e(g,".")||e(g,":"))&&(g=g.substring(0,g.length-1)),c=g?h(f,g):f,c instanceof Array&&c.length&&(c=c[0]),c&&b.each(Object.keys(c),function(a,b){var d=c[b],e=z(b,d);i.push(e)}),J(k),k},E=function(c){var d=c.model,e=new a.model.Model(d);return b.extend(e,{path:c.path||""}),e},F=function(){return"Loading sample body for REST service..."},G=function(a){var b,c;return"readwrite"===a.type&&(c=a.methods.filter(function(a){return"query"===a.type}),b=c.length?c[0]:a.methods&&a.methods.length?a.methods[0]:!1),b||(b={endpoint:a.serviceUrl||a.endpoint,verb:a.verb,scopes:a.scopes,pathToContent:a.pathToContent,type:"query"}),b},H=function(a){var b=G(a);return v(a.service.serviceUrl,b.endpoint||b.serviceUrl,b.verb)},I=function(a){a||(a={});var c=b.Deferred(),d=a.entities,e=a.service,f=[],g=[],h={};return b.each(d,function(b,c){e&&!c.service&&(c.service=e);var d=B(c,{ignoreCache:a.ignoreCache});d.done(function(a){h[b]=a}),g.push(d)}),b.when.all(g).done(function(){b.each(d,function(a){f.push(h[a])}),c.resolve(f)}).fail(function(a){c.reject(a)}),c.promise()},J=function(a){a.fields||(a.fields=[]);var c=s("query",a)||"GET"===a.verb,d=s("insert",a)||"POST"===a.verb,e=s("update",a)||"PATCH"===a.verb||"PUT"===a.verb,f=s("delete",a)||"DELETE"===a.verb;b.each(a.fields,function(a,b){b.accessible=!0,b.uiOnly||(b.createable&&!d&&(b.createable=!1),b.editable&&!e&&(b.editable=!1)),b.displaytype||(b.displaytype="STRING"),b.filterable!==!1&&(b.filterable=!0)}),a.accessible=!0,a.createable=d,a.updateable=e,a.deleteable=f,a.queryable=a.filterable=c},K=function(a){var c=b.Deferred(),d=[];return b.each(a,function(a,c){var e,f=b.Deferred(),g=G(c);return d.push(f.promise()),g&&"query"===g.type?(e={url:g.endpoint||g.serviceUrl,verb:g.verb,dataType:g.dataType,scopes:g.scopes,type:g.type},void b.when(u(c,e)).done(function(a){var d,e=t(a.body),g={};e&&c.pathToContent?d=h(e,c.pathToContent):e&&(d=e),d&&(d instanceof Array||(d=[d]),b.each(d,function(a,b){b.Id||(b.Id=o())})),g.lastLoadTime=(new Date).getTime(),g.data=d,g.debug=c.debug,g.soql=c.soql,f.resolve(g)}).fail(function(a){f.reject(a)})):(f.resolve({data:[],lastLoadTime:(new Date).getTime()}),!0)}),b.when.all(d).done(function(a){c.resolve(a)}).fail(function(a){c.reject(a)}),c.promise()},L=function(c){var d=b.Deferred();return b.each(c.operations,function(c,e){var j=a.$M(e.id),k=[],l=r("insert",j),n=r("update",j),p=r("delete",j);b.each(e.changes,function(a,c){var d,e={},g=j.getRowById(a),h=c.__deleted,i=!h&&m(a),o=!i&&!h,q=i?l:o?n:p,r=q.verb,s=q.scopes,t="asjsoninbody",u=q.sendChanges||t,v=q.endpoint;if(i?d={type:"insert",originalRecordId:a,originalRecord:g,request:{url:v,method:r,context:{model:j,row:g},scopes:s},method:q}:o?d={type:"update",originalRecordId:a,originalRecord:g,request:{url:v,method:r,context:{model:j,row:g},scopes:s},method:q}:h&&(d={type:"delete",originalRecordId:a,originalRecord:g,request:{url:v,method:r,context:{model:j,row:g},scopes:s},method:q}),o||i){var w="autoprefix"===q.changeMapping;b.each(c,function(a,b){e[(w?q.changeMappingPrefix:"")+a]=b}),"asjsoninbody"===u?d.request.data=e:"inheaderperfield"===u?d.request.headers=e:"inqueryparamperfield"===u&&b.each(e,function(a,b){d.request.url+=(f(d.request.url,"?")?"&":"?")+a+"="+encodeURIComponent(b)})}k.push(d)});var q,s=[],v=[],w=[],x=[],y=[],z=function(a){var c=a.request,d=c.type,f=c.method,j=a.response,k=j?j.body:null,l=j?j.headers:null,m=a.error,n=[],p=[],r={errors:n,messages:p,source:e.id},s=a.isSuccess,u=f.successIf,y=f.successField,z=f.successValue;if(k&&g(k)&&(k=t(k)),s&&("responsefieldispresent"===u?s=i(k,y):"responsefieldistrue"===u?s=h(k,y,!0)===!0:"responsefieldequals"===u?s=h(k,y,!0)===z:"responseheaderispresent"===u?s=i(l,y,!0):"responseheaderequals"===u?s=h(l,y)===z:"responsebodyequals"===u&&(s=k===z)),r.success=s,s||(q=!0,n.push({message:m,severity:"ERROR"})),"insert"===d){if(r.oldId=c.originalRecordId,s){var A=f.insertResponse||"recordinbody",B=f.createdRecordIdLocation,C={};b.extend(C,c.originalRecord),"recordinbody"===A?(r.id=o(),b.extend(C,k)):"idinbodyfield"===A?r.id=h(k,B):"idinheader"===A?r.id=h(l,B):"none"===A&&(r.id=o()),r.record=C,r.record.Id=r.id}w.push(r)}else"update"===d?(r.id=c.originalRecordId,x.push(r)):"delete"===d&&(r.id=c.originalRecordId,v.push(r))};b.each(k,function(a,c){var d=u(j,c.request);b.when(d).done(function(a){z({request:c,response:a,isSuccess:!0})}).fail(function(a){z({request:c,error:a,isSuccess:!1})}),s.push(d)}),b.when.all(s).always(function(){d.resolve({deleteResults:v,globalErrors:y,insertResults:w,totalsuccess:!q,updateResults:x})})}),d.promise()},M=function(a){a.sourceType="param",a.operator="=",a.encloseValueInQuotes=!0},N=function(f){f||(f={});var g,h=f.component,i=h.state,k=f.propertiesViewer,l=f.onChange||function(){h.rebuildProps(k)},m=[],n=[{name:"Method",props:m}],o=i.closest("model"),p=o.attr("service"),q=o.attr("id"),r=-1!==b.inArray(f.type,["update","insert"]),s=i.attr("sendchanges"),t=i.attr("successif");if(m.push({id:"endpoint",type:"template",location:"attribute",displayAs:"textarea",modelName:q,label:"Service URL",helptext:"For Data Sources that offer multiple Services, this would be the relative URL to the specific Service to be invoked, e.g. /products/list"}),g=p?a.service.getService(p):null,g&&g.authentication&&"oauth"===g.authentication.method&&m.push({id:"scopes",type:"string",label:"OAuth Scopes Needed",helptext:'Skuid will connect to this Data Source via OAuth. If the specific Service URL you are connecting to requires additional OAuth Scopes, enter them here, comma-separated, e.g. "profile,email" or "https://www.googleapis.com/auth/calendar".'}),m.push(j().getServiceAccessMethodProperty({onChange:l,type:f.type})),r){if(m.push({id:"sendchanges",label:"Send "+("update"===f.type?"updated":"new")+" field values...",type:"picklist",defaultValue:"asjsoninbody",picklistEntries:[{value:"asjsoninbody",label:"As JSON in request body"},{value:"inheaderperfield",label:"In request headers - one per changed field"},{value:"inqueryparamperfield",label:"In URL parameters - one per changed field"}],onChange:l}),e(s,"perfield")){var u="inheaderperfield"===s?"header":"parameter";m.push({id:"changemapping",label:"Field name to "+u+" name mapping",type:"picklist",defaultValue:"auto",picklistEntries:[{value:"auto",label:"Same names"},{value:"autoprefix",label:"Same names, with added prefix"}],onChange:l}),"autoprefix"===i.attr("changemapping")&&m.push({id:"changemappingprefix",type:"string",label:c.capitalizeFirst(u)+" name prefix"})}m.push({id:"successif",label:"Method succeeds if...",type:"picklist",defaultValue:"requestsucceeds",picklistEntries:[{value:"requestsucceeds",label:"Request succeeds"},{value:"responsefieldispresent",label:'"Success" Field in response body is present'},{value:"responsefieldistrue",label:'"Success" Field in response body is true'},{value:"responsefieldequals",label:'"Success" Field in response body equals a value'},{value:"responsebodyequals",label:"Response body equals a value"},{value:"responseheaderispresent",label:'"Success" Header is present in response'},{value:"responseheaderequals",label:'"Success" Header in response equals a value'}],onChange:l}),d(t,"responsefield")?m.push({id:"successfield",type:"string",label:"Success Field Name"}):d(t,"responseheader")?m.push({id:"successfield",type:"string",label:"Success Header Name",helptext:"The name of a Header in the response which, if present, indicates that this request succeeded, e.g. X-Record-Created"}):e(t,"equals")&&m.push({id:"successvalue",type:"string",label:"Contents of response body if request succeeds"}),"insert"===f.type&&(m.push({id:"insertresponse",label:"Response handling",type:"picklist",defaultValue:"recordinbody",picklistEntries:[{value:"recordinbody",label:"Created record will be returned in response body"},{value:"idinbodyfield",label:"Id of created record will be returned in field in response body"},{value:"idinheader",label:"Id of created record will be returned in response header"},{value:"none",label:"No information about created record will be returned"}],onChange:l}),"idinbodyfield"===i.attr("insertresponse")?m.push({id:"createdrecordidlocation",type:"string",label:"Name of Field containing created record's Id",helptext:"What is the name of / path to the Field in the expected response that will contain the created record's id? e.g. id, recordId"}):"idinheader"===i.attr("insertresponse")&&m.push({id:"createdrecordidlocation",type:"string",label:"Name of Header containing created record's Id",helptext:"What is the name of the Header expected in the response that will contain the created record's id? e.g. X-Record-Id, X-New-Record-Id"}))}else"query"===f.type&&m.push(j().getPathToContentProperty({component:h}));return n},O={runtime:{metadataSource:"local"},composer:{modelConditionLabel:"URL Merge Condition",modelConditionsLabel:"URL Merge Conditions",canFieldsBeSelected:function(a){var b,c=a.model,d="readwrite"===c.attr("type"),e=c.attr("service")&&(d?c.children("methods").children("method[verb][verb!=''][endpoint][endpoint!='']").length:c.attr("verb")&&c.attr("endpoint")),f="select a valid Service endpoint URL and access method";return"components"===a.mode?(b=c.children("fields").children().length,e||b?!0:"Please either "+f+", or manually add and define expected fields to this Model."):e?!0:"Please "+f+"."}},canAutoGenerateConditionsFromFields:!1,validConditionTypes:["fieldvalue","param","userinfo","blank","modelmerge"],canConditionsBeGrouped:!1,canFieldsBeIndividuallySearched:!1};new a.adapter.Adapter({buildEntityMetadataRequest:E,getEntityMetadata:I,getEntityMetadataCacheKey:H,getEntityMetadataLoadingMessageFromBreadcrumb:F,getMethodProperties:N,getNameField:p,getNewId:n,initialize:J,isNewId:m,load:K,makeRequest:u,name:"REST",populateBreadcrumbFromEntityMetadata:C,processEntityMetadataRequest:D,properties:O,save:L,setDefaultConditionState:M})}(skuid);